/* Obsidian-style callout variables */
:root {
  /* Callout styles: (already defined in extension)
  --callout-border-width: 0px;
  --callout-border-opacity: 0.25;
  --callout-padding: var(--size-4-3) var(--size-4-3) var(--size-4-3) var(--size-4-6);
  --callout-radius: var(--radius-s);
  --callout-blend-mode: var(--highlight-mix-blend-mode);
  --callout-title-color: inherit;
  --callout-title-padding: 0;
  --callout-title-size: inherit;
  --callout-title-weight: calc(var(--font-weight) + var(--bold-modifier));
  --callout-content-padding: 0;
  --callout-content-background: transparent;
  --callout-bug: var(--color-red-rgb);
  --callout-default: var(--color-blue-rgb);
  --callout-error: var(--color-red-rgb);
  --callout-example: var(--color-purple-rgb);
  --callout-fail: var(--color-red-rgb);
  --callout-important: var(--color-cyan-rgb);
  --callout-info: var(--color-blue-rgb);
  --callout-question: var(--color-orange-rgb);
  --callout-success: var(--color-green-rgb);
  --callout-summary: var(--color-cyan-rgb);
  --callout-tip: var(--color-cyan-rgb);
  --callout-todo: var(--color-blue-rgb);
  --callout-warning: var(--color-orange-rgb);
  --callout-quote: 158, 158, 158; 
  */
}

/* adjust the callout styles slightly for my preference */
div.callout,
details.callout {
  border-radius: 1em;
  padding-left: 18px;
  padding-bottom: 10px;
  margin-bottom: 10px;
}

/* common among all code callouts */
code.callout {
  font-family: var(--font-monospace);
  font-size: 0.875rem;
  line-height: 1.5;
  background-color: transparent;
  color: inherit;
}

/* Enhanced code styling using callout variables */
code.warning-style,
code.warning {
  background-color: rgba(var(--callout-warning), 0.1) !important;
  color: rgb(var(--callout-warning)) !important;
  border: 1px solid rgba(var(--callout-warning), 0.3);
  border-radius: var(--radius-s);
  padding: 2px 6px;
}

pre.warning-style,
pre.warning {
  background-color: rgba(var(--callout-warning), 0.05);
  border-left: 4px solid rgb(var(--callout-warning));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre.warning::before {
  content: "‚ö†Ô∏è Warning Code";
  display: block;
  color: rgb(var(--callout-warning));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

pre:has(code.warning) {
  background-color: rgba(var(--callout-warning), 0.05);
  border-left: 4px solid rgb(var(--callout-warning));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre:has(code.warning)::before {
  content: "‚ö†Ô∏è Warning";
  display: block;
  color: rgb(var(--callout-warning));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

code.error-style,
code.error {
  background-color: rgba(var(--callout-error), 0.1) !important;
  color: rgb(var(--callout-error)) !important;
  border: 1px solid rgba(var(--callout-error), 0.3);
  border-radius: var(--radius-s);
  padding: 2px 6px;
}

pre.error-style,
pre.error {
  background-color: rgba(var(--callout-error), 0.05);
  border-left: 4px solid rgb(var(--callout-error));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre.error::before {
  content: "‚ùå Error Code";
  display: block;
  color: rgb(var(--callout-error));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

code.tip-style,
code.tip {
  background-color: rgba(var(--callout-tip), 0.1) !important;
  color: rgb(var(--callout-tip)) !important;
  border: 1px solid rgba(var(--callout-tip), 0.3);
  border-radius: var(--radius-s);
  padding: 2px 6px;
}

pre.tip {
  background-color: rgba(var(--callout-tip), 0.05);
  border-left: 4px solid rgb(var(--callout-tip));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre.tip::before {
  content: "üí° Tip Code";
  display: block;
  color: rgb(var(--callout-tip));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

pre:has(code.tip) {
  background-color: rgba(var(--callout-tip), 0.05);
  border-left: 4px solid rgb(var(--callout-tip));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre:has(code.tip)::before {
  content: "üí° Tip";
  display: block;
  color: rgb(var(--callout-tip));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

code.info-style,
code.info {
  background-color: rgba(var(--callout-info), 0.1) !important;
  color: rgb(var(--callout-info)) !important;
  border: 1px solid rgba(var(--callout-info), 0.3);
  border-radius: var(--radius-s);
  padding: 2px 6px;
}

code.success-style,
code.success {
  background-color: rgba(var(--callout-success), 0.1) !important;
  color: rgb(var(--callout-success)) !important;
  border: 1px solid rgba(var(--callout-success), 0.3);
  border-radius: var(--radius-s);
  padding: 2px 6px;
}

pre:has(code.success-style),
pre:has(code.success) {
  background-color: rgba(var(--callout-success), 0.05);
  border-left: 4px solid rgb(var(--callout-success));
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre:has(code.success)::before {
  content: "‚úÖ Success";
  display: block;
  color: rgb(var(--callout-success));
  font-size: 0.875rem;
  margin-bottom: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}
