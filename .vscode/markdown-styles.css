/* # Headers */
.background {
  background-image: url("./assets/header.jpg");
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  color: white;
  text-shadow: 0 1px 4px rgba(0,0,0,0.7);
  padding: 1em 0;
}

/* Obsidian-style callout variables */
:root {
  /* Callout styles: (already defined in extension)
  --callout-border-width: 0px;
  --callout-border-opacity: 0.25;
  --callout-padding: var(--size-4-3) var(--size-4-3) var(--size-4-3) var(--size-4-6);
  --callout-radius: var(--radius-s);
  --callout-blend-mode: var(--highlight-mix-blend-mode);
  --callout-title-color: inherit;
  --callout-title-padding: 0;
  --callout-title-size: inherit;
  --callout-title-weight: calc(var(--font-weight) + var(--bold-modifier));
  --callout-content-padding: 0;
  --callout-content-background: transparent;
  --callout-bug: var(--color-red-rgb);
  --callout-default: var(--color-blue-rgb);
  --callout-error: var(--color-red-rgb);
  --callout-example: var(--color-purple-rgb);
  --callout-fail: var(--color-red-rgb);
  --callout-important: var(--color-cyan-rgb);
  --callout-info: var(--color-blue-rgb);
  --callout-question: var(--color-orange-rgb);
  --callout-success: var(--color-green-rgb);
  --callout-summary: var(--color-cyan-rgb);
  --callout-tip: var(--color-cyan-rgb);
  --callout-todo: var(--color-blue-rgb);
  --callout-warning: var(--color-orange-rgb);
  --callout-quote: 158, 158, 158; 
  */
}

/* adjust the callout styles slightly for my preference */
div.callout,
details.callout {
  border-radius: 1em;
  padding-left: 18px;
  padding-bottom: 10px;
  margin-bottom: 10px;
}

/*
custom code callouts by type: (14 total, 28 '-style' pairs)
  bug
  default
  error
  example
  fail
  important
  info
  question
  success
  summary
  tip
  todo
  warning
  quote
*/

/* Enhanced code styling using callout variables */

/* Replace {COLOR} with the hex value for your tip color, e.g. F59E42 for orange.
   Example: stroke=%22%23F59E42%22
   Tip 2ACAC8: stroke=%22%232ACAC8%22
*/

/* bug */
code.bug,
code.bug-style {
  color: rgb(var(--callout-bug));
  background-color: rgba(var(--callout-bug), 0.05) !important;
}

pre:has(.bug),
pre:has(.bug-style) {
  background-color: rgba(var(--callout-bug), 0.05) !important;
  border-color: rgb(var(--callout-bug));
}

pre:has(code.bug)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-bug));
  content: "Bug";
}

pre:has(code.bug) {
  background-color: rgba(var(--callout-bug), 0.05);
  border-color: rgb(var(--callout-bug));
}

/* default */
code.default,
code.default-style {
  color: rgb(var(--callout-default));
  background-color: rgba(var(--callout-default), 0.05) !important;
}

pre:has(.default),
pre:has(.default-style) {
  background-color: rgba(var(--callout-default), 0.05) !important;
  border-color: rgb(var(--callout-default));
}

pre:has(code.default)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-default));
  content: "Default";
}

pre:has(code.default) {
  background-color: rgba(var(--callout-default), 0.05);
  border-color: rgb(var(--callout-default));
}

/* error */
code.error,
code.error-style {
  color: rgb(var(--callout-error));
  background-color: rgba(var(--callout-error), 0.05) !important;
}

pre:has(.error),
pre:has(.error-style) {
  background-color: rgba(var(--callout-error), 0.05) !important;
  border-color: rgb(var(--callout-error));
}

pre:has(code.error)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-error));
  content: "Error";
}

pre:has(code.error) {
  background-color: rgba(var(--callout-error), 0.05);
  border-color: rgb(var(--callout-error));
}

/* example */
code.example,
code.example-style {
  color: rgb(var(--callout-example));
  background-color: rgba(var(--callout-example), 0.05) !important;
}

pre:has(.example),
pre:has(.example-style) {
  background-color: rgba(var(--callout-example), 0.05) !important;
  border-color: rgb(var(--callout-example));
}

pre:has(code.example)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-example));
  content: "Example";
}

pre:has(code.example) {
  background-color: rgba(var(--callout-example), 0.05);
  border-color: rgb(var(--callout-example));
}

/* fail */
code.fail,
code.fail-style {
  color: rgb(var(--callout-fail));
  background-color: rgba(var(--callout-fail), 0.05) !important;
}

pre:has(.fail),
pre:has(.fail-style) {
  background-color: rgba(var(--callout-fail), 0.05) !important;
  border-color: rgb(var(--callout-fail));
}

pre:has(code.fail)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-fail));
  content: "Fail";
}

pre:has(code.fail) {
  background-color: rgba(var(--callout-fail), 0.05);
  border-color: rgb(var(--callout-fail));
}

/* important */
code.important,
code.important-style {
  color: rgb(var(--callout-important));
  background-color: rgba(var(--callout-important), 0.05) !important;
}

pre:has(.important),
pre:has(.important-style) {
  background-color: rgba(var(--callout-important), 0.05) !important;
  border-color: rgb(var(--callout-important));
}

pre:has(code.important)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-important));
  content: "Important";
}

pre:has(code.important) {
  background-color: rgba(var(--callout-important), 0.05);
  border-color: rgb(var(--callout-important));
}

/* info */
code.info,
code.info-style {
  color: rgb(var(--callout-info));
  background-color: rgba(var(--callout-info), 0.05) !important;
}

pre:has(.info),
pre:has(.info-style) {
  background-color: rgba(var(--callout-info), 0.05) !important;
  border-color: rgb(var(--callout-info));
}

pre:has(code.info)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-info));
  content: "Info";
}

pre:has(code.info) {
  background-color: rgba(var(--callout-info), 0.05);
  border-color: rgb(var(--callout-info));
}

/* question */
code.question,
code.question-style {
  color: rgb(var(--callout-question));
  background-color: rgba(var(--callout-question), 0.05) !important;
}

pre:has(.question),
pre:has(.question-style) {
  background-color: rgba(var(--callout-question), 0.05) !important;
  border-color: rgb(var(--callout-question));
}

pre:has(code.question)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-question));
  content: "Question";
}

pre:has(code.question) {
  background-color: rgba(var(--callout-question), 0.05);
  border-color: rgb(var(--callout-question));
}

/* success */
code.success,
code.success-style {
  color: rgb(var(--callout-success));
  background-color: rgba(var(--callout-success), 0.05) !important;
}

pre:has(.success),
pre:has(.success-style) {
  background-color: rgba(var(--callout-success), 0.05) !important;
  border-color: rgb(var(--callout-success));
}

pre:has(code.success)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-success));
  content: "Success";
}

pre:has(code.success) {
  background-color: rgba(var(--callout-success), 0.05);
  border-color: rgb(var(--callout-success));
}

/* summary */
code.summary,
code.summary-style {
  color: rgb(var(--callout-summary));
  background-color: rgba(var(--callout-summary), 0.05) !important;
}

pre:has(.summary),
pre:has(.summary-style) {
  background-color: rgba(var(--callout-summary), 0.05) !important;
  border-color: rgb(var(--callout-summary));
}

pre:has(code.summary)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-summary));
  content: "Summary";
}

pre:has(code.summary) {
  background-color: rgba(var(--callout-summary), 0.05);
  border-color: rgb(var(--callout-summary));
}

/* tip */
code.tip,
code.tip-style {
  color: rgb(var(--callout-tip));
  background-color: rgba(var(--callout-tip), 0.05) !important;
}

pre:has(.tip),
pre:has(.tip-style) {
  background-color: rgba(var(--callout-tip), 0.05) !important;
  border-color: rgb(var(--callout-tip));
}

pre:has(code.tip)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-tip));
  content: "Tip";
}

pre:has(code.tip) {
  background-color: rgba(var(--callout-tip), 0.05);
  border-color: rgb(var(--callout-tip));
}

/* todo */
code.todo,
code.todo-style {
  color: rgb(var(--callout-todo));
  background-color: rgba(var(--callout-todo), 0.05) !important;
}

pre:has(.todo),
pre:has(.todo-style) {
  background-color: rgba(var(--callout-todo), 0.05) !important;
  border-color: rgb(var(--callout-todo));
}

pre:has(code.todo)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-todo));
  content: "Todo";
}

pre:has(code.todo) {
  background-color: rgba(var(--callout-todo), 0.05);
  border-color: rgb(var(--callout-todo));
}

/* warning */
code.warning,
code.warning-style {
  color: rgb(var(--callout-warning));
  background-color: rgba(var(--callout-warning), 0.05) !important;
}

pre:has(.warning),
pre:has(.warning-style) {
  background-color: rgba(var(--callout-warning), 0.05) !important;
  border-color: rgb(var(--callout-warning));
}

pre:has(code.warning)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-warning));
  content: "Warning";
}

pre:has(code.warning) {
  background-color: rgba(var(--callout-warning), 0.05);
  border-color: rgb(var(--callout-warning));
}

/* quote */
code.quote,
code.quote-style {
  color: rgb(var(--callout-quote));
  background-color: rgba(var(--callout-quote), 0.05) !important;
}

pre:has(.quote),
pre:has(.quote-style) {
  background-color: rgba(var(--callout-quote), 0.05) !important;
  border-color: rgb(var(--callout-quote));
}

pre:has(code.quote)::before {
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke=%22%232ACAC8%22 stroke-width="2" stroke-linecap="round" stroke-linejoin="round" opacity="1" class="svg-icon lucide-flame"><path d="M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z"></path></svg>') no-repeat left center/1.25em 1.25em;
  color: rgb(var(--callout-quote));
  content: "Quote";
}

pre:has(code.quote) {
  background-color: rgba(var(--callout-quote), 0.05);
  border-color: rgb(var(--callout-quote));
}

/* common among all code callouts */

/*
bug
bug-style
default
default-style
error
error-style
example
example-style
fail
fail-style
important
important-style
info
info-style
question
question-style
success
success-style
summary
summary-style
tip
tip-style
todo
todo-style
warning
warning-style
quote
quote-style
*/

code.bug,
code.bug-style,
code.default,
code.default-style,
code.error,
code.error-style,
code.example,
code.example-style,
code.fail,
code.fail-style,
code.important,
code.important-style,
code.info,
code.info-style,
code.question,
code.question-style,
code.success,
code.success-style,
code.summary,
code.summary-style,
code.tip,
code.tip-style,
code.todo,
code.todo-style,
code.warning,
code.warning-style,
code.quote,
code.quote-style
{ /* inline and multiline */
  border-width: 1px;
  border-style: solid;
  border-radius: var(--radius-s);
  border-radius: 8px;
  padding: 2px 6px;
  margin-bottom: 10px !important;
}

pre code.bug,
pre code.bug-style,
pre code.default,
pre code.default-style,
pre code.error,
pre code.error-style,
pre code.example,
pre code.example-style,
pre code.fail,
pre code.fail-style,
pre code.important,
pre code.important-style,
pre code.info,
pre code.info-style,
pre code.question,
pre code.question-style,
pre code.success,
pre code.success-style,
pre code.summary,
pre code.summary-style,
pre code.tip,
pre code.tip-style,
pre code.todo,
pre code.todo-style,
pre code.warning,
pre code.warning-style,
pre code.quote,
pre code.quote-style
{ /* multiline only */
  background-color: transparent;
  border: none;
  margin-bottom: 0px !important;
}

pre.bug,
pre.bug-style,
pre.default,
pre.default-style,
pre.error,
pre.error-style,
pre.example,
pre.example-style,
pre.fail,
pre.fail-style,
pre.important,
pre.important-style,
pre.info,
pre.info-style,
pre.question,
pre.question-style,
pre.success,
pre.success-style,
pre.summary,
pre.summary-style,
pre.tip,
pre.tip-style,
pre.todo,
pre.todo-style,
pre.warning,
pre.warning-style,
pre.quote,
pre.quote-style
{
  border-left-width: 4px;
  border-left-style: solid;
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre:has(code.tip).bug::before,
pre:has(code.tip).bug-style::before,
pre:has(code.tip).default::before,
pre:has(code.tip).default-style::before,
pre:has(code.tip).error::before,
pre:has(code.tip).error-style::before,
pre:has(code.tip).example::before,
pre:has(code.tip).example-style::before,
pre:has(code.tip).fail::before,
pre:has(code.tip).fail-style::before,
pre:has(code.tip).important::before,
pre:has(code.tip).important-style::before,
pre:has(code.tip).info::before,
pre:has(code.tip).info-style::before,
pre:has(code.tip).question::before,
pre:has(code.tip).question-style::before,
pre:has(code.tip).success::before,
pre:has(code.tip).success-style::before,
pre:has(code.tip).summary::before,
pre:has(code.tip).summary-style::before,
pre:has(code.tip).tip::before,
pre:has(code.tip).tip-style::before,
pre:has(code.tip).todo::before,
pre:has(code.tip).todo-style::before,
pre:has(code.tip).warning::before,
pre:has(code.tip).warning-style::before,
pre:has(code.tip).quote::before,
pre:has(code.tip).quote-style::before
{
  display: block;
  font-size: 0.875rem;
  margin-bottom: 8px;
  letter-spacing: 0.025em;
  display: flex;
  align-items: center;
  height: 1.5em;
  padding-left: 1.5em;
  font-weight: bold;
  width: auto;
  background-size: 1.25em 1.25em;
}

pre:has(code.bug),
pre:has(code.bug-style),
pre:has(code.default),
pre:has(code.default-style),
pre:has(code.error),
pre:has(code.error-style),
pre:has(code.example),
pre:has(code.example-style),
pre:has(code.fail),
pre:has(code.fail-style),
pre:has(code.important),
pre:has(code.important-style),
pre:has(code.info),
pre:has(code.info-style),
pre:has(code.question),
pre:has(code.question-style),
pre:has(code.success),
pre:has(code.success-style),
pre:has(code.summary),
pre:has(code.summary-style),
pre:has(code.tip),
pre:has(code.tip-style),
pre:has(code.todo),
pre:has(code.todo-style),
pre:has(code.warning),
pre:has(code.warning-style),
pre:has(code.quote),
pre:has(code.quote-style)
{
  border-left-width: 4px;
  border-left-style: solid;
  border-radius: var(--radius-s);
  padding: var(--size-4-3);
  position: relative;
}

pre:has(code.bug)::before,
pre:has(code.bug-style)::before,
pre:has(code.default)::before,
pre:has(code.default-style)::before,
pre:has(code.error)::before,
pre:has(code.error-style)::before,
pre:has(code.example)::before,
pre:has(code.example-style)::before,
pre:has(code.fail)::before,
pre:has(code.fail-style)::before,
pre:has(code.important)::before,
pre:has(code.important-style)::before,
pre:has(code.info)::before,
pre:has(code.info-style)::before,
pre:has(code.question)::before,
pre:has(code.question-style)::before,
pre:has(code.success)::before,
pre:has(code.success-style)::before,
pre:has(code.summary)::before,
pre:has(code.summary-style)::before,
pre:has(code.tip)::before,
pre:has(code.tip-style)::before,
pre:has(code.todo)::before,
pre:has(code.todo-style)::before,
pre:has(code.warning)::before,
pre:has(code.warning-style)::before,
pre:has(code.quote)::before,
pre:has(code.quote-style)::before
{
  display: block;
  font-size: 0.875rem;
  margin-bottom: 8px;
  letter-spacing: 0.025em;
  display: flex;
  align-items: center;
  height: 1.5em;
  padding-left: 1.5em;
  font-weight: bold;
  width: auto;
  background-size: 1.25em 1.25em;
}

/* debug table */
table.example {
  border-collapse: collapse;
  width: 100%;
  margin-bottom: 1em;
  background: #fafaff;
  box-shadow: 0 2px 8px rgba(0,0,0,0.04);
}

table.example th,
table.example td {
  border: 1px solid #d1d5db;
  padding: 8px 12px;
  text-align: left;
}

table.example th {
  background: #e0e7ff;
  color: #3730a3;
  font-weight: 600;
}

table.example tr:nth-child(even) {
  background: #f3f4f6;
}

table.example td {
  border: 1px solid black;
}

table.example td.bug {
  color: rgba(var(--callout-bug), 1);
  background-color: rgba(var(--callout-bug), 0.3);
}
table.example td.bug-style {
  color: rgba(var(--callout-bug), 1);
  background-color: rgba(var(--callout-bug), 0.3);
}
table.example td.default {
  color: rgba(var(--callout-default), 1);
  background-color: rgba(var(--callout-default), 0.3);
}
table.example td.default-style {
  color: rgba(var(--callout-default), 1);
  background-color: rgba(var(--callout-default), 0.3);
}
table.example td.error {
  color: rgba(var(--callout-error), 1);
  background-color: rgba(var(--callout-error), 0.3);
}
table.example td.error-style {
  color: rgba(var(--callout-error), 1);
  background-color: rgba(var(--callout-error), 0.3);
}
table.example td.example {
  color: rgba(var(--callout-example), 1);
  background-color: rgba(var(--callout-example), 0.3);
}
table.example td.example-style {
  color: rgba(var(--callout-example), 1);
  background-color: rgba(var(--callout-example), 0.3);
}
table.example td.fail {
  color: rgba(var(--callout-fail), 1);
  background-color: rgba(var(--callout-fail), 0.3);
}
table.example td.fail-style {
  color: rgba(var(--callout-fail), 1);
  background-color: rgba(var(--callout-fail), 0.3);
}
table.example td.important {
  color: rgba(var(--callout-important), 1);
  background-color: rgba(var(--callout-important), 0.3);
}
table.example td.important-style {
  color: rgba(var(--callout-important), 1);
  background-color: rgba(var(--callout-important), 0.3);
}
table.example td.info {
  color: rgba(var(--callout-info), 1);
  background-color: rgba(var(--callout-info), 0.3);
}
table.example td.info-style {
  color: rgba(var(--callout-info), 1);
  background-color: rgba(var(--callout-info), 0.3);
}
table.example td.question {
  color: rgba(var(--callout-question), 1);
  background-color: rgba(var(--callout-question), 0.3);
}
table.example td.question-style {
  color: rgba(var(--callout-question), 1);
  background-color: rgba(var(--callout-question), 0.3);
}
table.example td.success {
  color: rgba(var(--callout-success), 1);
  background-color: rgba(var(--callout-success), 0.3);
}
table.example td.success-style {
  color: rgba(var(--callout-success), 1);
  background-color: rgba(var(--callout-success), 0.3);
}
table.example td.summary {
  color: rgba(var(--callout-summary), 1);
  background-color: rgba(var(--callout-summary), 0.3);
}
table.example td.summary-style {
  color: rgba(var(--callout-summary), 1);
  background-color: rgba(var(--callout-summary), 0.3);
}
table.example td.tip {
  color: rgba(var(--callout-tip), 1);
  background-color: rgba(var(--callout-tip), 0.3);
}
table.example td.tip-style {
  color: rgba(var(--callout-tip), 1);
  background-color: rgba(var(--callout-tip), 0.3);
}
table.example td.todo {
  color: rgba(var(--callout-todo), 1);
  background-color: rgba(var(--callout-todo), 0.3);
}
table.example td.todo-style {
  color: rgba(var(--callout-todo), 1);
  background-color: rgba(var(--callout-todo), 0.3);
}
table.example td.warning {
  color: rgba(var(--callout-warning), 1);
  background-color: rgba(var(--callout-warning), 0.3);
}
table.example td.warning-style {
  color: rgba(var(--callout-warning), 1);
  background-color: rgba(var(--callout-warning), 0.3);
}
table.example td.quote {
  color: rgba(var(--callout-quote), 1);
  background-color: rgba(var(--callout-quote), 0.3);
}
table.example td.quote-style {
  color: rgba(var(--callout-quote), 1);
  background-color: rgba(var(--callout-quote), 0.3);
}
